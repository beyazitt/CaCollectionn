@model OnionBase.Presentation.ViewModels.AddProductViewModel

<h2>Ürün Ekle</h2>

@using (Html.BeginForm("AddProduct", "AllProducts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        <label for="ProductName">Ürün Adı</label>
        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductName)
    </div>

    <div class="form-group">
        <label for="Description">Açıklama</label>
        @Html.TextBoxFor(model => model.ProductDescription, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductDescription)
    </div>

    <div class="form-group">
        <label for="Price">Fiyat</label>
        @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Price)
    </div>
    <div class="form-group">
        <input type="file" name="Image" accept="image/*" />
    </div>
    <div class="form-group">
        <label for="Price">Renk</label>
        @Html.TextBoxFor(model => model.ProductColor, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductColor)
    </div>
    <div class="form-group">
        <label for="Price">Stok</label>
        @Html.TextBoxFor(model => model.Stock, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Stock)
    </div>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["Message"]
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-warning" role="alert">
            @TempData["Error"]
        </div>
    }



    <button type="submit" class="btn btn-primary">Ekle</button>
}
