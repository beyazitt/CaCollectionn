@using OnionBase.Presentation.ViewModels;
@model ResetPasswordViewModel
<!DOCTYPE html>
<html lang="tr">
<head>
    <style>
        .forget-password-container {
            display: flex; /* Flexbox düzenlemesini etkinleştir */
            justify-content: center; /* Yatayda ortala */
            align-items: center; /* Dikeyde ortala */
            height: 100vh; /* Kapsayıcıyı ekranın tam boyuna uzat */
            font-family: Arial, sans-serif;
        }

        .input-group {
            position: relative;
            margin-bottom: 20px;
            display: flex; /* Flexbox düzenlemesini etkinleştir */
            justify-content: center; /* Yatayda ortala */
            align-items: center; /* Dikeyde ortala */
        }

            .input-group input {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 4px;
                outline: none;
                color: black;
                transition: border-color 0.3s;
            }

                .input-group input:focus {
                    border-color: #57081a;
                }

            .input-group .focus-border {
                position: absolute;
                bottom: -2px;
                left: 0;
                width: 100%;
                height: 2px;
                background-color: #57081a;
                visibility: hidden;
            }

            .input-group input:focus + .focus-border {
                visibility: visible;
            }

            .input-group .triangle {
                position: absolute;
                bottom: -10px;
                left: 50%;
                width: 0;
                height: 0;
                border-left: 10px solid transparent;
                border-right: 10px solid transparent;
                border-top: 10px solid #57081a;
                visibility: hidden;
                transform: translateX(-50%);
            }

            .input-group input:focus + .focus-border + .triangle {
                visibility: visible;
            }

        .submit-button {
            padding: 10px 15px;
            background-color: #57081a;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .submit-button:hover {
                background-color: #57081a;
            }

        .mirror {
            visibility: hidden;
            white-space: pre; /* Metni aynı şekilde koru */
            font-family: inherit; /* Input alanıyla aynı font özelliklerini kullan */
            font-size: inherit;
            position: absolute; /* Belki layout'u etkilememesi için */
            pointer-events: none; /* Fare etkileşimini engelle */
        }

    </style>
</head>
<body>
    <div class="forget-password-container">
        <div class="input-group">
            <form asp-action="ForgetPassword" asp-controller="Account" method="post">
                <div class="form-outline mb-4">
                    <input type="email" id="email" class="form-control" name="Email" asp-for="Email" placeholder="E-posta adresiniz" required oninput="adjustTriangle()">
                    <span class="focus-border"></span>
                    <span class="triangle"></span>
                    <span id="mirror" class="mirror"></span> <!-- Bu span, inputtaki metni yansıtacak -->
                </div>
                <button type="submit"
                        class="btn btn-success btn-block btn-lg gradient-custom-4 text-body" style="background-color:#57081a">
                    <font style="color:white">Mail Gönder</font>
                </button>
            </form>
        </div>
    </div>

    <script>
        function adjustTriangle() {
            var input = document.getElementById('email');
            var mirror = document.getElementById('mirror');
            var triangle = document.querySelector('.triangle');

            // Metni mirror span'a kopyala
            mirror.textContent = input.value;

            // Mirror span'ın genişliğini ve input'un stil özelliklerini ölç
            var mirrorWidth = mirror.offsetWidth;
            var inputStyle = window.getComputedStyle(input);
            var inputPaddingLeft = parseInt(inputStyle.paddingLeft, 10);
            var inputBorderLeft = parseInt(inputStyle.borderLeftWidth, 10);

            // Gerçek metin başlangıç noktasını hesapla
            var textStartPos = inputPaddingLeft + inputBorderLeft;
            var inputWidth = input.offsetWidth - textStartPos; // Metin alanının gerçek genişliği
            var percent = ((mirrorWidth + textStartPos) / inputWidth) * 100;

            // Üçgenin pozisyonunu ayarla
            triangle.style.left = `calc(${percent}% - 10px)`;
        }
    </script>
</body>
</html>
